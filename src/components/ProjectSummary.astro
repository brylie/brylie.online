---
import { formatProjectCategory, formatProjectStatus } from "../types/projects";
import type { Project } from "../types/projects";
import { Icon } from "astro-icon/components";

interface Props {
  project: Project;
}
const { project } = Astro.props;
const formattedDate = new Date(project.data.datePublished).toLocaleDateString(
  "en-US",
  {
    year: "numeric",
    month: "long",
  },
);
---

<article
  class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 shadow-sm overflow-hidden hover:shadow-md transition-all duration-300 h-full flex flex-col"
>
  <div class="p-6 flex flex-col h-full">
    <div class="flex-grow">
      <header class="mb-4">
        <h3 class="text-xl font-bold mb-2 text-gray-900 dark:text-white">
          <a
            href={`/projects/${project.data.slug}`}
            class="hover:text-teal-600 dark:hover:text-teal-400 transition-colors duration-200"
          >
            {project.data.title}
          </a>
        </h3>
        <div
          class="flex flex-wrap text-sm text-gray-600 dark:text-gray-300 mb-3 gap-4"
        >
          <span class="inline-flex items-center gap-1">
            <Icon
              name="mdi:folder-outline"
              class="w-4 h-4 text-gray-500 dark:text-gray-400"
            />
            {formatProjectCategory(project.data.category)}
          </span>
          <span class="inline-flex items-center gap-1">
            <Icon
              name="ic:sync"
              class="w-4 h-4 text-gray-500 dark:text-gray-400"
            />
            {formatProjectStatus(project.data.status)}
          </span>
          <span class="inline-flex items-center gap-1">
            <Icon
              name="mdi:calendar"
              class="w-4 h-4 text-gray-500 dark:text-gray-400"
            />
            {formattedDate}
          </span>
        </div>
      </header>
      <p class="text-gray-700 dark:text-gray-300 mb-4 line-clamp-3">
        {project.data.description}
      </p>
      {
        project.data.tags && project.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-4">
            {project.data.tags.map((tag) => (
              <a
                href={`/tags/${tag}`}
                class="px-2.5 py-1 text-xs bg-teal-50 text-teal-700 dark:bg-teal-900/30 dark:text-teal-300 rounded-full hover:bg-teal-100 dark:hover:bg-teal-800/40 transition-colors"
              >
                {tag}
              </a>
            ))}
          </div>
        )
      }
    </div>
    <div
      class="flex flex-wrap gap-3 mt-4 pt-4 border-t border-gray-100 dark:border-gray-700"
    >
      <a
        href={`/projects/${project.data.slug}`}
        class="text-teal-600 dark:text-teal-400 hover:text-teal-800 dark:hover:text-teal-300 font-medium text-sm inline-flex items-center gap-1 transition-colors"
        aria-label={`View details about ${project.data.title}`}
      >
        <Icon name="mdi:arrow-top-right" class="w-4 h-4" /> View Details
      </a>

      <a
        href={project.data.url}
        target="_blank"
        rel="noopener noreferrer"
        class="text-teal-600 dark:text-teal-400 hover:text-teal-800 dark:hover:text-teal-300 font-medium text-sm inline-flex items-center gap-1 transition-colors"
        aria-label={`Visit ${project.data.title} website`}
      >
        <Icon name="ic:web" class="w-4 h-4" /> Visit Project
      </a>

      {
        project.data.githubUrl && (
          <a
            href={project.data.githubUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="text-teal-600 dark:text-teal-400 hover:text-teal-800 dark:hover:text-teal-300 font-medium text-sm inline-flex items-center gap-1 transition-colors"
            aria-label={`View ${project.data.title} source code on GitHub`}
          >
            <Icon name="mdi:github" class="w-4 h-4" /> GitHub
          </a>
        )
      }
    </div>
  </div>
</article>
