---
import { Icon } from "astro-icon/components";
---

<button
  id="theme-toggle"
  type="button"
  class="w-10 h-10 p-2 rounded-lg bg-gray-100/80 hover:bg-gray-200/80 dark:bg-gray-800/80 dark:hover:bg-gray-700/80
    focus:outline-none focus:ring-2 focus:ring-teal-500 dark:focus:ring-teal-400
    transition-all duration-300 transform hover:scale-105 backdrop-blur-sm"
  aria-live="polite"
>
  <!-- Sun icon -->
  <Icon
    name="mdi:weather-sunny"
    class="w-full h-full text-amber-500 hidden dark:block transition-all duration-500 rotate-0 dark:rotate-180 scale-0 dark:scale-100"
    aria-hidden="true"
  />
  <!-- Moon icon -->
  <Icon
    name="mdi:weather-night"
    class="w-full h-full text-blue-600 block dark:hidden transition-all duration-500 rotate-0 dark:-rotate-180 scale-100 dark:scale-0"
    aria-hidden="true"
  />
  <span class="sr-only" id="theme-toggle-label">Switch to dark mode</span>
</button>

<script>
  // This script handles only the toggle button interaction
  function setupThemeToggle() {
    const button = document.getElementById("theme-toggle");
    const label = document.getElementById("theme-toggle-label");

    if (!button || !label) return;

    // Update label based on current theme
    function updateLabel() {
      const isDark = document.documentElement.classList.contains("dark");
      if (label !== null) {
        label.textContent = `Switch to ${isDark ? "light" : "dark"} mode`;
      }
    }

    // Toggle theme
    function toggleTheme() {
      const isDark = document.documentElement.classList.contains("dark");

      // Switch theme
      if (isDark) {
        document.documentElement.classList.remove("dark");
        document.documentElement.classList.add("light");
        localStorage.setItem("theme", "light");
      } else {
        document.documentElement.classList.add("dark");
        document.documentElement.classList.remove("light");
        localStorage.setItem("theme", "dark");
      }

      // Update meta theme-color for browser UI
      const themeColor = isDark ? "#ffffff" : "#111827";
      const metaTheme = document.querySelector('meta[name="theme-color"]');
      if (metaTheme) {
        metaTheme.setAttribute("content", themeColor);
      }

      // Update label
      updateLabel();
    }

    // Update label on initial load
    updateLabel();

    // Handle click events
    button.addEventListener("click", toggleTheme);
  }

  // Set up the toggle when the component loads
  setupThemeToggle();

  // Re-initialize after page transitions
  document.addEventListener("astro:page-load", setupThemeToggle);
  document.addEventListener("astro:after-swap", setupThemeToggle);
</script>
