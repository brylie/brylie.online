---
import { Icon } from "astro-icon/components";
---

<button
  id="theme-toggle"
  type="button"
  class="w-10 h-10 p-2 rounded-lg bg-gray-100/80 hover:bg-gray-200/80 dark:bg-gray-800/80 dark:hover:bg-gray-700/80
    focus:outline-none focus:ring-2 focus:ring-teal-500 dark:focus:ring-teal-400
    transition-all duration-300 transform hover:scale-105 backdrop-blur-sm"
  aria-live="polite"
>
  <!-- Sun icon -->
  <Icon
    name="mdi:weather-sunny"
    class="w-full h-full text-amber-500 hidden dark:block transition-all duration-500
      rotate-0 dark:rotate-180 scale-0 dark:scale-100"
    aria-hidden="true"
  />
  <!-- Moon icon -->
  <Icon
    name="mdi:weather-night"
    class="w-full h-full text-blue-600 block dark:hidden transition-all duration-500
      rotate-0 dark:-rotate-180 scale-100 dark:scale-0"
    aria-hidden="true"
  />
  <span class="sr-only" id="theme-toggle-label"></span>
</button>
<script>
  // Check for saved theme preference, otherwise use system preference
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  // Function to set theme
  const setTheme = (theme: "light" | "dark") => {
    document.documentElement.classList.remove("light", "dark");
    document.documentElement.classList.add(theme);
    localStorage.setItem("theme", theme);

    // Update ARIA label
    const label = document.getElementById("theme-toggle-label");
    if (label) {
      label.textContent = `Switch to ${theme === "light" ? "dark" : "light"} mode`;
    }
  };

  // Set initial theme
  setTheme(getThemePreference() as "light" | "dark");

  // Wait for DOM to be ready
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");

    if (themeToggle) {
      // Set initial ARIA label
      const isDark = document.documentElement.classList.contains("dark");
      const label = document.getElementById("theme-toggle-label");
      if (label) {
        label.textContent = `Switch to ${isDark ? "light" : "dark"} mode`;
      }

      themeToggle.addEventListener("click", () => {
        const isDark = document.documentElement.classList.contains("dark");
        setTheme(isDark ? "light" : "dark");
      });
    }

    // Listen for system theme changes
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", (e) => {
        if (!localStorage.getItem("theme")) {
          setTheme(e.matches ? "dark" : "light");
        }
      });
  });
</script>
