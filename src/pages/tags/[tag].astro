---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPostListItem from "../../components/BlogPostListItem.astro";
import ProjectSummary from "../../components/ProjectSummary.astro";
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const allProjects = await getCollection("projects");

  // Get all tags from blog posts
  const postTags = [...new Set(allPosts.flatMap((post) => post.data.tags))];

  // Get all tags from projects
  const projectTags = [
    ...new Set(allProjects.flatMap((project) => project.data.tags || [])),
  ];

  // Get all technologies from blog posts
  const postTechnologies = [
    ...new Set(allPosts.flatMap((post) => post.data.technologies || [])),
  ];

  // Get all technologies from projects
  const projectTechnologies = [
    ...new Set(
      allProjects.flatMap((project) => project.data.technologies || []),
    ),
  ];

  // Combine all unique tags and technologies
  const uniqueTags = [
    ...new Set([
      ...postTags,
      ...postTechnologies,
      ...projectTags,
      ...projectTechnologies,
    ]),
  ].sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));

  return uniqueTags.map((tag) => {
    // Filter posts that contain this tag
    const filteredPosts = allPosts
      .filter(
        (post) =>
          post.data.tags?.includes(tag) ||
          post.data.technologies?.includes(tag),
      )
      .sort(
        (a, b) =>
          new Date(b.data.datePublished).valueOf() -
          new Date(a.data.datePublished).valueOf(),
      );

    // Filter projects that contain this tag in either tags or technologies
    const filteredProjects = allProjects
      .filter(
        (project) =>
          project.data.tags?.includes(tag) ||
          project.data.technologies?.includes(tag),
      )
      .sort(
        (a, b) =>
          new Date(b.data.datePublished).valueOf() -
          new Date(a.data.datePublished).valueOf(),
      );

    return {
      params: { tag },
      props: { posts: filteredPosts, projects: filteredProjects, tag },
    };
  });
}

const { tag } = Astro.params;
const { posts, projects } = Astro.props;

// Check if we have posts or projects with this tag
const hasPosts = posts.length > 0;
const hasProjects = projects.length > 0;

// Determine if this tag is used as a technology in any project
const isTechnology = projects.some((project) =>
  project.data.technologies?.includes(tag),
);

// Help user understand what kind of tag this is
let tagDescription = "";
if (hasPosts && hasProjects) {
  if (isTechnology) {
    tagDescription = `Explore content tagged with "${tag}", used in both blog posts and projects as a technology.`;
  } else {
    tagDescription = `Browse content tagged with "${tag}", featured in both blog posts and projects.`;
  }
} else if (hasPosts) {
  tagDescription = `Read blog posts tagged with "${tag}".`;
} else if (hasProjects) {
  if (isTechnology) {
    tagDescription = `Discover projects that use "${tag}" as a technology.`;
  } else {
    tagDescription = `Explore projects tagged with "${tag}".`;
  }
}

const pageTitle = `${tag} - Tagged Content`;
---

<BaseLayout pageTitle={pageTitle}>
  <div class="max-w-4xl mx-auto">
    <!-- Tag Header -->
    <section class="mb-12">
      <div
        class="bg-gradient-to-br from-teal-50 to-blue-50 dark:from-gray-800 dark:to-gray-900 rounded-xl p-6 shadow-sm"
      >
        <div class="flex flex-wrap items-center gap-3 mb-4">
          <h1
            class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white"
          >
            #{tag}
          </h1>
          <span
            class="inline-flex items-center gap-1.5 px-3 py-1 text-sm font-medium {isTechnology ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300' : 'bg-teal-100 text-teal-800 dark:bg-teal-900/30 dark:text-teal-300'} rounded-full"
          >
            <Icon name="mdi:code-tags" class="w-4 h-4" />
            {isTechnology ? "Technology" : "Tag"}
          </span>
        </div>

        <p class="text-lg text-gray-700 dark:text-gray-300 mb-6">
          {tagDescription}
        </p>

        <div class="flex flex-wrap gap-4">
          <div
            class="bg-white/50 dark:bg-white/5 rounded-lg px-4 py-2 flex items-center gap-2"
          >
            <Icon
              name="mdi:file-document-outline"
              class="w-5 h-5 text-teal-600 dark:text-teal-400"
            />
            <span>
              <span class="font-bold text-gray-900 dark:text-white"
                >{posts.length}</span
              >
              <span class="text-gray-600 dark:text-gray-400 ml-1"
                >{posts.length === 1 ? "Post" : "Posts"}</span
              >
            </span>
          </div>

          <div
            class="bg-white/50 dark:bg-white/5 rounded-lg px-4 py-2 flex items-center gap-2"
          >
            <Icon
              name="mdi:briefcase-outline"
              class="w-5 h-5 text-teal-600 dark:text-teal-400"
            />
            <span>
              <span class="font-bold text-gray-900 dark:text-white"
                >{projects.length}</span
              >
              <span class="text-gray-600 dark:text-gray-400 ml-1"
                >{projects.length === 1 ? "Project" : "Projects"}</span
              >
            </span>
          </div>
        </div>
      </div>
    </section>

    <!-- Content Sections -->
    <div class="space-y-12">
      {
        hasPosts && (
          <section>
            <div class="flex items-center justify-between mb-6">
              <h2 class="text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-3">
                <Icon
                  name="mdi:file-document-multiple"
                  class="w-6 h-6 text-teal-600 dark:text-teal-400"
                />
                Blog Posts
              </h2>
              <a
                href="/blog/"
                class="inline-flex items-center gap-1.5 text-sm font-medium text-teal-600 dark:text-teal-400 hover:text-teal-800 dark:hover:text-teal-300 transition-colors"
              >
                All Posts
                <Icon name="mdi:arrow-right" class="w-4 h-4" />
              </a>
            </div>

            <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 shadow-sm divide-y divide-gray-100 dark:divide-gray-700">
              {posts.map((post) => (
                <div class="p-4">
                  <BlogPostListItem
                    url={`/posts/${post.data.slug}`}
                    title={post.data.title}
                    datePublished={new Date(
                      post.data.datePublished,
                    ).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                    description={post.data.description}
                  />
                </div>
              ))}
            </div>
          </section>
        )
      }

      {
        hasProjects && (
          <section>
            <div class="flex items-center justify-between mb-6">
              <h2 class="text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-3">
                <Icon
                  name="mdi:briefcase"
                  class="w-6 h-6 text-teal-600 dark:text-teal-400"
                />
                Projects
              </h2>
              <a
                href="/projects/"
                class="inline-flex items-center gap-1.5 text-sm font-medium text-teal-600 dark:text-teal-400 hover:text-teal-800 dark:hover:text-teal-300 transition-colors"
              >
                All Projects
                <Icon name="mdi:arrow-right" class="w-4 h-4" />
              </a>
            </div>

            <div class="grid gap-6 md:grid-cols-2">
              {projects.map((project) => (
                <ProjectSummary project={project} />
              ))}
            </div>
          </section>
        )
      }
    </div>

    <!-- Back Link -->
    <div class="mt-12 pt-6 border-t border-gray-200 dark:border-gray-700">
      <a
        href="/tags"
        class="inline-flex items-center gap-2 text-teal-600 dark:text-teal-400 hover:text-teal-800 dark:hover:text-teal-300 font-medium transition-colors group"
      >
        <Icon
          name="mdi:arrow-left"
          class="w-4 h-4 transition-transform group-hover:-translate-x-0.5"
        />
        Back to all tags
      </a>
    </div>
  </div>
</BaseLayout>
