---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

// Get all blog posts
const allPosts = await getCollection("blog");
const postTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

// Get all projects
const allProjects = await getCollection("projects");
const projectTags = [
  ...new Set(allProjects.map((project) => project.data.tags || []).flat()),
];

// Get all technologies from projects
const projectTechnologies = [
  ...new Set(
    allProjects.map((project) => project.data.technologies || []).flat(),
  ),
];

// Combine all tags and technologies, removing duplicates
const allTags = [
  ...new Set([...postTags, ...projectTags, ...projectTechnologies]),
];

// Calculate tag frequency for variable size display
const tagFrequency = {};
allTags.forEach((tag) => {
  tagFrequency[tag] = 0;

  // Count in blog posts
  allPosts.forEach((post) => {
    if (post.data.tags.includes(tag)) tagFrequency[tag]++;
  });

  // Count in projects (both as tag and technology)
  allProjects.forEach((project) => {
    if (project.data.tags?.includes(tag)) tagFrequency[tag]++;
    if (project.data.technologies?.includes(tag)) tagFrequency[tag]++;
  });
});

// Sort tags by frequency (descending) and then alphabetically
const sortedTags = allTags.sort((a, b) => {
  // If frequencies are the same, sort alphabetically
  if (tagFrequency[b] === tagFrequency[a]) {
    return a.toLowerCase().localeCompare(b.toLowerCase());
  }
  // Otherwise sort by frequency
  return tagFrequency[b] - tagFrequency[a];
});

const pageTitle = "Explore Tags & Technologies";

// Get tag count by category
const postTagCount = postTags.length;
const projectTagCount = projectTags.length;
const techCount = projectTechnologies.length;

// Function to determine tag size based on frequency
function getTagSize(tag) {
  const frequency = tagFrequency[tag];
  if (frequency >= 5) return "text-xl font-bold";
  if (frequency >= 3) return "text-lg font-semibold";
  if (frequency >= 2) return "text-base font-medium";
  return "text-sm";
}

// Function to determine tag color based on type
function getTagColor(tag) {
  const isTech = projectTechnologies.includes(tag);
  const isProjectTag = projectTags.includes(tag);
  const isPostTag = postTags.includes(tag);

  if (isTech && (isProjectTag || isPostTag)) {
    return "bg-purple-100 text-purple-800 hover:bg-purple-200 dark:bg-purple-900/30 dark:text-purple-300 dark:hover:bg-purple-800/40";
  } else if (isTech) {
    return "bg-blue-100 text-blue-800 hover:bg-blue-200 dark:bg-blue-900/30 dark:text-blue-300 dark:hover:bg-blue-800/40";
  } else if (isProjectTag && isPostTag) {
    return "bg-teal-100 text-teal-800 hover:bg-teal-200 dark:bg-teal-900/30 dark:text-teal-300 dark:hover:bg-teal-800/40";
  } else if (isProjectTag) {
    return "bg-green-100 text-green-800 hover:bg-green-200 dark:bg-green-900/30 dark:text-green-300 dark:hover:bg-green-800/40";
  }
  return "bg-amber-100 text-amber-800 hover:bg-amber-200 dark:bg-amber-900/30 dark:text-amber-300 dark:hover:bg-amber-800/40";
}
---

<BaseLayout pageTitle={pageTitle}>
  <div class="max-w-4xl mx-auto px-4">
    <header class="mb-12 text-center">
      <h1
        class="text-3xl md:text-4xl font-extrabold mb-4 text-gray-900 dark:text-white"
      >
        Skills, Tags & Technologies
      </h1>

      <p
        class="text-lg text-gray-700 dark:text-gray-300 max-w-2xl mx-auto mb-6"
      >
        Discover content by topics and explore my technical skills and areas of
        expertise. Click on a tag to see related blog posts and projects.
      </p>

      <div class="flex flex-wrap gap-4 justify-center">
        <div
          class="flex items-center gap-2 px-3 py-1.5 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700"
        >
          <Icon
            name="mdi:folder-open-outline"
            class="w-4 h-4 text-green-600 dark:text-green-400"
          />
          <span class="text-sm">
            <span class="font-semibold">{postTagCount + projectTagCount}</span> Tags
          </span>
        </div>

        <div
          class="flex items-center gap-2 px-3 py-1.5 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700"
        >
          <Icon
            name="mdi:code-tags"
            class="w-4 h-4 text-blue-600 dark:text-blue-400"
          />
          <span class="text-sm">
            <span class="font-semibold">{techCount}</span> Technologies
          </span>
        </div>
      </div>
    </header>

    <!-- Tag Cloud -->
    <div
      class="bg-white dark:bg-gray-800 rounded-xl shadow-md border border-gray-200 dark:border-gray-700 p-8"
    >
      <h2 class="sr-only">Tag Cloud</h2>

      <div class="flex flex-wrap justify-center gap-3 md:gap-4 text-center">
        {
          sortedTags.map((tag) => (
            <a
              href={`/tags/${tag}`}
              class={`px-3 py-1.5 rounded-full transition-all duration-300 hover:shadow-sm transform hover:scale-105 ${getTagColor(tag)} ${getTagSize(tag)}`}
              style={`opacity: ${0.7 + (tagFrequency[tag] * 0.1 > 1 ? 1 : 0.7 + tagFrequency[tag] * 0.1)};`}
              aria-label={`View content tagged with ${tag}`}
            >
              {tag}
            </a>
          ))
        }
      </div>
    </div>

    <!-- Legend -->
    <div class="mt-8 bg-gray-50 dark:bg-gray-900/50 rounded-lg p-4">
      <h2 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
        Tag Categories:
      </h2>
      <div class="flex flex-wrap gap-3 text-xs">
        <div class="flex items-center gap-1.5">
          <span class="w-3 h-3 rounded-full bg-purple-400 dark:bg-purple-600"
          ></span>
          <span>Multi-purpose Technologies</span>
        </div>
        <div class="flex items-center gap-1.5">
          <span class="w-3 h-3 rounded-full bg-blue-400 dark:bg-blue-600"
          ></span>
          <span>Technologies</span>
        </div>
        <div class="flex items-center gap-1.5">
          <span class="w-3 h-3 rounded-full bg-teal-400 dark:bg-teal-600"
          ></span>
          <span>Common Tags</span>
        </div>
        <div class="flex items-center gap-1.5">
          <span class="w-3 h-3 rounded-full bg-green-400 dark:bg-green-600"
          ></span>
          <span>Project Tags</span>
        </div>
        <div class="flex items-center gap-1.5">
          <span class="w-3 h-3 rounded-full bg-amber-400 dark:bg-amber-600"
          ></span>
          <span>Blog Tags</span>
        </div>
      </div>
    </div>
  </div>

  <style>
    /* Add subtle animation to tags on hover */
    a:hover {
      transform: translateY(-2px);
    }

    /* Stagger animation for tags on page load */
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(8px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    a {
      animation: fadeIn 0.5s ease-out forwards;
      animation-delay: calc(var(--order, 0) * 50ms);
    }
  </style>

  <script>
    // Add animation delay to tags based on their position
    document.addEventListener("DOMContentLoaded", () => {
      const tags = document.querySelectorAll(
        ".flex.flex-wrap.justify-center a",
      );
      tags.forEach((tag, index) => {
        tag.style.setProperty("--order", index % 20);
      });
    });
  </script>
</BaseLayout>
